; *********************************************************************

; **** Definition cheat sheet:
; board_build.flash_mode in terms of performance: QIO > QOUT > DIO > DOUT
; for lib_ldf_mode, see http://docs.platformio.org/en/latest/librarymanager/ldf.html;ldf

; **** Frequently used build flags:
; Use custom.h file to override default settings for ESPeasy: -D USE_CUSTOM_H
; Set VCC mode to measure Vcc of ESP chip :                   -D FEATURE_ADC_VCC=true

; Build Flags:
;  -DUSE_CONFIG_OVERRIDE
; lwIP 1.4 (Default)
;  -DPIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH
; lwIP 2 - Low Memory
;  -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
; lwIP 2 - Higher Bandwitdh
;  -DPIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
; VTABLES in Flash (default)
;  -DVTABLES_IN_FLASH
; VTABLES in Heap
;  -DVTABLES_IN_DRAM
; VTABLES in IRAM
;  -DVTABLES_IN_IRAM
; NO_EXTRA_4K_HEAP - this forces the default NONOS-SDK user's heap location
;     Default currently overlaps cont stack (Arduino) with sys stack (System)
;     to save up-to 4 kB of heap. (starting core_2.4.2)
; ESP8266_DISABLE_EXTRA4K  - Calls disable_extra4k_at_link_time() from setup
;                            to force the linker keep user's stack in user ram.
; CONT_STACKSIZE to set the 'cont' (Arduino) stack size. Default = 4096
; -mtarget-align  see: https://github.com/arendst/Sonoff-Tasmota/issues/3678#issuecomment-419712437

[esp82xx_defaults]
build_flags               = -D BUILD_GIT='"${sysenv.TRAVIS_TAG}"'
                            -D NDEBUG
                            -lstdc++ -lsupc++
                            -mtarget-align
                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
                            -DVTABLES_IN_FLASH
                            -DPUYA_SUPPORT=1

[esp82xx_2_5_x]
build_flags               = -D BUILD_GIT='"${sysenv.TRAVIS_TAG}"'
                            -DNDEBUG
                            -mtarget-align
                            -DVTABLES_IN_FLASH
                            -fno-exceptions
                            -lstdc++
                            -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH
                            -DPUYA_SUPPORT=1
                            -DCORE_POST_2_5_0

[esp82xx_2_6_x]
build_flags               = ${esp82xx_2_5_x.build_flags} 
                            -O2
                            -DBEARSSL_SSL_BASIC
                            -DCORE_POST_2_6_0 


;[core_2_3_0]
;platform                  = https://github.com/TD-er/platform-espressif8266.git#patch/v1.5.0_Puya
;build_flags               = -D BUILD_GIT='"${sysenv.TRAVIS_TAG}"'
;                            -DNDEBUG
;                            -DVTABLES_IN_FLASH
;                            -fno-exceptions
;                            -DPUYA_SUPPORT=1
;                            -DARDUINO_ESP8266_RELEASE_2_3_0
;                            -DFORCE_PRE_2_5_0
;lib_ignore                = ESP32_ping, ESP32WebServer, IRremoteESP8266, HeatpumpIR

;[core_2_4_0]
;platform                  = https://github.com/TD-er/platform-espressif8266.git#patch/v1.6.0_Puya
;build_flags               = ${esp82xx_defaults.build_flags} -DARDUINO_ESP8266_RELEASE_2_4_0 -DFORCE_PRE_2_5_0
;lib_ignore                = ESP32_ping, ESP32WebServer, IRremoteESP8266, HeatpumpIR

;[core_2_4_1]
;platform                  = https://github.com/TD-er/platform-espressif8266.git#patch/v1.7.3_Puya
;build_flags               = ${esp82xx_defaults.build_flags} -DARDUINO_ESP8266_RELEASE_2_4_1 -DFORCE_PRE_2_5_0
;lib_ignore                = ESP32_ping, ESP32WebServer, IRremoteESP8266, HeatpumpIR


[core_2_4_2]
platform                  = https://github.com/TD-er/platform-espressif8266.git#patch/v1.8.0_Puya
build_flags               = ${esp82xx_defaults.build_flags} -DARDUINO_ESP8266_RELEASE_2_4_2 -DFORCE_PRE_2_5_0
lib_ignore                = ESP32_ping, ESP32WebServer, IRremoteESP8266, HeatpumpIR

;[core_2_5_0]
;platform                  = espressif8266@2.0.4
;build_flags               = ${esp82xx_2_5_x.build_flags}

;[core_2_5_2]
;platform                  = espressif8266@2.2.3
;build_flags               = ${esp82xx_2_5_x.build_flags}


; See for SDK flags: https://github.com/esp8266/Arduino/blob/master/tools/platformio-build.py

;[core_2_6_0]
;platform                  = https://github.com/Jason2866/platform-espressif8266.git#core_2_6_0
;build_flags               = ${esp82xx_2_6_x.build_flags} 
                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703

;[core_2_6_1]
;platform                  = https://github.com/Jason2866/platform-espressif8266.git#core_2_6_1
;build_flags               = ${esp82xx_2_6_x.build_flags} 
                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703

;[core_2_6_1_sdk3]
;platform                  = https://github.com/Jason2866/platform-espressif8266.git#core_2_6_1
;build_flags               = ${esp82xx_2_6_x.build_flags} 
                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK3

[core_2_6_2]
platform                  = espressif8266@2.3.1
platform_packages         =
	framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git#2.6.2
build_flags               = ${esp82xx_2_6_x.build_flags} 
                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_190703

[core_2_6_2_sdk3]
platform                  = espressif8266@2.3.1
platform_packages         =
	framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git#2.6.2
build_flags               = ${esp82xx_2_6_x.build_flags} 
                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK3

[core_stage]
platform                  = https://github.com/platformio/platform-espressif8266.git#feature/stage
build_flags               = ${esp82xx_2_6_x.build_flags}
                            -DARDUINO_ESP8266_RELEASE='"2.7.0-dev stage"'
                            -DPIO_FRAMEWORK_ARDUINO_ESPRESSIF_SDK22x_191105

[core_esp32_1_11_0]
platform                  = espressif32@1.11.0

[core_esp32_stage]
platform                  = https://github.com/platformio/platform-espressif32.git#feature/stage
